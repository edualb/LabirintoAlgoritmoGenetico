import java.util.Random;
import java.util.Scanner;

import javax.swing.SwingUtilities;

import view.View;


public class Main {
	
	private static Scanner scanner;
	static int populacao;
	static int geracao;

	public static void main(String[] args) {
		SwingUtilities.invokeLater(new Runnable() {
			@Override
			public void run() {
				View view = new View(this.geraLabirinto());
				scanner = new Scanner(System.in);
				
				System.out.println("*****************Algoritmo Genético*****************");
				System.out.println("**                                                **");
				System.out.println("** Tipo de CrossOver: De ponto;                   **");
				System.out.println("** Taxa de CrossOver: 0,7;                        **");
				System.out.println("** Tipo de mutação: Clássica;                     **");
				System.out.println("** Taxa de mutação: 0,2;                          **");
				System.out.println("** Aptidão: Avaliação;                            **");
				System.out.println("**                                                **");
				System.out.println("** Seleção: - Inicialização aleaória              **");
				System.out.println("**          - Elitismo                            **");
				System.out.println("**          - Torneio                             **");
				System.out.println("**                                                **");
				System.out.println("****************************************************");
				
				System.out.println("Informe o número da população:");
				populacao = scanner.nextInt();
				
				System.out.println("Informe o número de geração:");
				geracao = scanner.nextInt();
				
				for(int i = 0 ; i < geracao ; i++) {
					for (int j = 0 ; j < populacao ; j++) {
						
					}
				}
				
				view.setVisible(true);
			}
		});
	}
	
	private int[][] geraLabirinto() {
		int [][] labirinto = new int[202][202];
		scanner = new Scanner(System.in);
		
		System.out.println("Inserira as coordenadas da saída x e y: ");
		int respostax = scanner.nextInt();
		int respostay = scanner.nextInt();
		
		labirinto[respostay][respostax] = 9;
		
		for (int  linha = 0 ; linha < labirinto.length ; linha++) {
			for (int coluna = 0 ; coluna < labirinto[0].length ; coluna++) {
				if (linha == 0 || coluna == 0 || linha == 201 || coluna == 201) {
					labirinto[linha][coluna] = 1;
				} else if (labirinto[linha][coluna] != 9) {
					labirinto[linha][coluna] = 0;
				}
			}
		}
		
		for (int i = 0 ; i < 1000 ; i++) {
			int geraX = getRandomNumberInRange(0, 201);
			int geraY = getRandomNumberInRange(0, 201);
			
			while (labirinto[geraY][geraX] != 9 && labirinto[geraY][geraX] != 1 && geraX != 1 && geraY != 1) {
				labirinto[geraY][geraX] = 1;
			}
		}
		
		return labirinto;
		
	}
	
	//https://www.mkyong.com/java/java-generate-random-integers-in-a-range/
	private static int getRandomNumberInRange(int min, int max) {

		if (min >= max) {
			throw new IllegalArgumentException("max must be greater than min");
		}

		Random r = new Random();
		return r.nextInt((max - min) + 1) + min;
	}
	
}
